# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'BasicConfigWindow.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


import json
import logging
import sys
from pathlib import Path

# Imports (PyPI)
from PyQt5 import QtCore, QtWidgets
from PyQt5.QtWidgets import QFileDialog

# Imports (utilities)
from utils.constants import USER_SETTINGS_PATH

# Import the main window
from ui.EchoMainWindow import Ui_MainWindow

class Ui_InitialSettingsWindow(object):
    def __init__(self, MainWindow):
        super(Ui_InitialSettingsWindow, self).__init__()
        self.setupUi(MainWindow)

    def setupUi(self, InitialSettingsWindow):
        InitialSettingsWindow.setObjectName("InitialSettingsWindow")
        InitialSettingsWindow.resize(437, 382)
        self.centralwidget = QtWidgets.QWidget(InitialSettingsWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        spacerItem = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_2.addItem(spacerItem)
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setContentsMargins(30, -1, 30, -1)
        self.verticalLayout.setObjectName("verticalLayout")
        self.serverIPLabel = QtWidgets.QLabel(self.centralwidget)
        self.serverIPLabel.setObjectName("serverIPLabel")
        self.verticalLayout.addWidget(self.serverIPLabel)
        self.serverLineEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.serverLineEdit.setObjectName("serverLineEdit")
        self.verticalLayout.addWidget(self.serverLineEdit)
        spacerItem1 = QtWidgets.QSpacerItem(10, 10, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        self.verticalLayout.addItem(spacerItem1)
        self.pathLabel = QtWidgets.QLabel(self.centralwidget)
        self.pathLabel.setObjectName("pathLabel")
        self.verticalLayout.addWidget(self.pathLabel)
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.folderPathLineEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.folderPathLineEdit.setObjectName("folderPathLineEdit")
        self.horizontalLayout.addWidget(self.folderPathLineEdit)
        self.discoverFilesButton = QtWidgets.QPushButton(self.centralwidget)
        self.discoverFilesButton.setObjectName("discoverFilesButton")
        self.horizontalLayout.addWidget(self.discoverFilesButton)
        self.verticalLayout.addLayout(self.horizontalLayout)
        spacerItem2 = QtWidgets.QSpacerItem(20, 20, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        self.verticalLayout.addItem(spacerItem2)
        self.continueButton = QtWidgets.QPushButton(self.centralwidget)
        self.continueButton.setObjectName("continueButton")
        self.verticalLayout.addWidget(self.continueButton)
        self.verticalLayout_2.addLayout(self.verticalLayout)
        spacerItem3 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_2.addItem(spacerItem3)
        InitialSettingsWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(InitialSettingsWindow)
        QtCore.QMetaObject.connectSlotsByName(InitialSettingsWindow)

        self.on_click_listeners(InitialSettingsWindow)

    def retranslateUi(self, InitialSettingsWindow):
        _translate = QtCore.QCoreApplication.translate
        InitialSettingsWindow.setWindowTitle(_translate("InitialSettingsWindow", "Basic Details"))
        self.serverIPLabel.setText(_translate("InitialSettingsWindow", "Server IP"))
        self.serverLineEdit.setPlaceholderText(_translate("InitialSettingsWindow", "Enter Server IP"))
        self.pathLabel.setText(_translate("InitialSettingsWindow", "Public Folder Path"))
        self.folderPathLineEdit.setPlaceholderText(_translate("InitialSettingsWindow", "Enter Public Folder Path"))
        self.discoverFilesButton.setText(_translate("InitialSettingsWindow", "Open"))
        self.continueButton.setText(_translate("InitialSettingsWindow", "Continue"))

    def continue_button_clicked(self, MainWindow) -> None:
        """Loads the entered values into the settings and stores them in the settings.json file

        Parameters
        ----------
        MainWindow : MainWindow
            The main application window
        """

        # Get entered values
        MainWindow.user_settings["server_ip"] = self.serverIPLabel.text()
        MainWindow.user_settings["share_folder_path"] = self.folderPathLineEdit.text()
        try:
            # Store the settings in the settings.json file
            with USER_SETTINGS_PATH.open(mode="w") as user_settings_file:
                json.dump(MainWindow.user_settings, user_settings_file, indent=4, sort_keys=True)

            # Open the main window
            MainWindow.ui = Ui_MainWindow(MainWindow)
            # self.close()
        except Exception as e:
            logging.error(f"Could not save User Config: {e}")
            # self.close()

    def open_dir_picker(self) -> None:
        """Opens the directory picker to choose a share folder"""

        path = QFileDialog.getExistingDirectory(self, "Select Share Folder", str(Path.home()), QFileDialog.ShowDirsOnly)
        self.le_sharePath.setText(path)

    def on_click_listeners(self, MainWindow):
        self.discoverFilesButton.clicked.connect(self.open_dir_picker)
        self.continueButton.clicked.connect(lambda: self.continue_button_clicked(MainWindow))
